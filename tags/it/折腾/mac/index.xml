<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IT/折腾/Mac on Ethan 的思考札记</title><link>https://www.jsongo.top/tags/it/%E6%8A%98%E8%85%BE/mac/</link><description>Recent content in IT/折腾/Mac on Ethan 的思考札记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 10 Oct 2024 11:31:09 +0800</lastBuildDate><atom:link href="https://www.jsongo.top/tags/it/%E6%8A%98%E8%85%BE/mac/index.xml" rel="self" type="application/rss+xml"/><item><title>清理 mac 电脑磁盘空间</title><link>https://www.jsongo.top/articles/clean-mac-disk-space/</link><pubDate>Thu, 10 Oct 2024 11:31:09 +0800</pubDate><guid>https://www.jsongo.top/articles/clean-mac-disk-space/</guid><description>&lt;img src="https://cdn.jsongo.top/banners/d8418fa48f2cc793c8f63aa13111635f.png" alt="Featured image of post 清理 mac 电脑磁盘空间" />&lt;p>经常遇到磁盘不够的情况，即使我电脑已经是 512G 的磁盘，还是经常遇到磁盘不足的问题。系统就占了 200G 以上，实在太黑盒了，其它部分一不小心就超出了。所以时不时会研究下怎么清理我的电脑。&lt;br>
首先，可以先过一遍电脑中的代码，如果用 node 的话，可以把 node_modules 删一删。&lt;/p>
&lt;h1 id="1-vscode-或-cursor-等">1 、Vscode 或 Cursor 等
&lt;/h1>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mv &lt;span class="s2">&amp;#34;/Users/bytedance/Library/Application Support/Code/logs&amp;#34;&lt;/span> ~/.Trash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>除了这个 logs 还有另外两个可能空间占用也比较大的目录：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>CachedData:&lt;/strong> 缓存数据，删除后 Cursor 可能需要重新下载/索引某些数据，导致启动或某些功能变慢。&lt;/li>
&lt;li>&lt;strong>CachedExtensionVSIXs:&lt;/strong> 缓存的扩展程序安装包，删除后 Cursor 可能需要重新下载扩展，影响扩展功能。&lt;br>
有需要也可以删，可能会稍微影响 cursor 下次打开时的性能，但问题不大。&lt;br>
另外 Cursor 和 windsurf 等也一样。&lt;/li>
&lt;/ul>
&lt;h1 id="2清理-git">2、清理 Git
&lt;/h1>&lt;p>有的 git 历史太多，可能有上 G 的内容。可以尝试让 git 自动清理下。&lt;br>
第一步，先用 &lt;code>git reflog expire&lt;/code> 来过期旧的 reflog 条目。例如，过期超过一周的条目&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git reflog expire --expire&lt;span class="o">=&lt;/span>1.week.ago --all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后清理未引用的对象，下面这条命令会删除不需要的对象，并压缩存储库（新 git 版本一般都会做，所以一般这步收益不大，反而因为磁盘不足，压到一半中断，增加了未删除的压缩文件）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git gc --prune&lt;span class="o">=&lt;/span>1.week.ago
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>进一步的，可以强制垃圾回收（这一步可能会特别慢）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git gc --aggressive --prune&lt;span class="o">=&lt;/span>1.week.ago
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我试了以上的命令，回收的有限，可能我本地已经有很好的压缩了。&lt;/p>
&lt;h1 id="3处理-obsidian-中的图片等">3、处理 Obsidian 中的图片等
&lt;/h1>&lt;p>如果也使用了 Obsidian 的话，里面可能有些资源会比较大，如你曾经贴过一个较大的视频或几兆的图片，这些都可以做下压缩。&lt;br>
把所有的 png 图片找出来，比如根目录文件，先进入根目录，然后：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ag -g .png$ . &lt;span class="p">|&lt;/span> xargs ls -lh &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $5, $9}&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sort -hr &lt;span class="p">|&lt;/span> more
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>ag&lt;/code> 是 the_silver_searcher 工具，mac 上没这个命令的话，可以自己安装一个。&lt;br>
开始用的好好的，但后来发现有些文件名中带了空格，awk 中用 $9 打印出来的文件名不完整。后来改用 &lt;code>du -h&lt;/code> 来代替 &lt;code>ls -lh&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ag -0 -g .png$ . &lt;span class="p">|&lt;/span> xargs -0 du -h &lt;span class="p">|&lt;/span> sort -hr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>好使！&lt;/p>
&lt;h1 id="docker">Docker
&lt;/h1>&lt;p>清理未使用的镜像和：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker image prune -a -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>清理停止的容器（确定都没用了再操作）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker container prune
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当然更绝一点，连 build 的缓存都不要了（谨慎）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker builder prune -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="磁盘">磁盘
&lt;/h1>&lt;p>比较通用的方法是，从系统磁盘中查看哪个目录占用较大，一层层往下分析。&lt;br>
&lt;img src="https://cdn.jsongo.top/2025/04/e2c574e7ab713206354294e0faac5ae1.webp"
loading="lazy"
alt="8ee84296b354d8a922451b7d0e50e8a8_MD5|806x888"
>&lt;br>
每一个都可以点进去看有哪些大文件（它按大小排序）。&lt;br>
当然要更细的话，也可以用命令行，从上往下看某些目录里的占用情况：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">du -hsx ~/* &lt;span class="p">|&lt;/span> sort -rh &lt;span class="p">|&lt;/span> head -10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsongo.top/2025/04/bba67c4fef0813913b1399566d099fc7.webp"
loading="lazy"
alt="c63ab378d1ecb0a972305dfab65f9d0c_MD5|806x202"
>&lt;br>
然后找到大文件&lt;/p></description></item></channel></rss>